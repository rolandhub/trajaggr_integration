% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/agg_allGenerics.R, R/over_STF.R, R/over_sp.R
\docType{methods}
\name{over}
\alias{over}
\alias{over,STF,Track}
\alias{over,STF,Track-method}
\alias{over,SpatialGrid,Track}
\alias{over,SpatialGrid,Track-method}
\alias{over,SpatialPixels,Track}
\alias{over,SpatialPixels,Track-method}
\alias{over,SpatialPolygons,Track}
\alias{over,SpatialPolygons,Track-method}
\title{Spatio-temporal overlay of \code{Track} objects with \code{Spatial} or \code{STF} objects}
\usage{
\S4method{over}{STF,Track}(x, y, returnList = FALSE, fn = NULL, ...,
  use.data = FALSE, weight.points = NULL)

\S4method{over}{SpatialPolygons,Track}(x, y, returnList = FALSE, fn = NULL,
  ..., use.data = FALSE, weight.points = NULL)

\S4method{over}{SpatialPixels,Track}(x, y, returnList = FALSE, fn = NULL,
  ..., use.data = FALSE, weight.points = NULL)

\S4method{over}{SpatialGrid,Track}(x, y, returnList = FALSE, fn = NULL, ...,
  use.data = FALSE, weight.points = NULL)
}
\arguments{
\item{x}{object of class \code{Spatial} or \code{STF} (see section 'Usage')}

\item{y}{\code{Track} object}

\item{returnList}{logical, indicates if a list should be returned}

\item{fn}{(optional) aggregation function, that expects a vector of weights as its second argument
if the argument \code{weight.points} is specified to perform a weighted aggregation.}

\item{...}{optional additional arguments to \code{fn}}

\item{use.data}{logical or a vevtor of indices or a vector of column names, indicating if
indices (\code{use.data = FALSE}) or (optional aggregated) attribute values should be returned}

\item{weight.points}{\code{NULL}, "byTime", "byDist" or "equal", indicating the basis of the
weights that should be used for a weighted aggregation of attribute values}
}
\value{
The returned object depends on the specified arguments and it is consistent with the \code{over}
methods defined in the packages \pkg{sp} and \pkg{spacetime}. For further details please see also the vignette.
}
\description{
Spatio-temporal overlay of \code{Track} objects with objects inheriting
from class \code{Spatial} or \code{STF} objects as well as their \code{data.frame} counterparts.

For the spatial or spatio-temporal geometries of \code{x} the indices or attributes from the \code{Track}
object are returned.
If \code{x} inherts from class \code{Spatial} the returned object is extended,
such that it respects the temporal information of the \code{Track} object. In particular that means that
the returned object has one value (may also be NA) for each combination from the spatial geometries with
the timestamps from the \code{Track} object.

If \code{fn} and \code{weight.points} are adequately specified a weighted aggregation is performed.

For further details please see the vignette!
}
\note{
The weight.points argument should just be specified if a function that expects a vector of weights as
its second argument is passed to \code{fn}.
}
\examples{
## Load example toy data
load(system.file("extdata","trajaggr_TestData.RData", package = "trajaggr"), verbose = FALSE)
## Example 1: overlay of Track and Spatial object
# returnList = FALSE returns index vector
over_sp <- over(spPolys, Track_A1, returnList = FALSE)
dim(spPolys)
dim(Track_A1)
over_sp
# returnList = TRUE returns list of indices
over_sp <- over(spPolys, Track_A1, returnList = TRUE)
over_sp[1:7]
# use.data = TRUE and returnList = TRUE returns list of data.frames
over_sp <- over(spPolys, Track_A1, returnList = TRUE, use.data = TRUE)
over_sp[1:7]
# use.data = TRUE and returnList = FALSE returns data.frames
# with (first) data element
over_sp <- over(spPolys, Track_A1, returnList = FALSE, use.data = TRUE)
over_sp[1:7, ]
##
## Example 2: overlay of Track and STF object with two time intervals
# returnList = FALSE returns index vector
over_stf <- over(stf_Polys_2t, Track_A1, returnList = FALSE)
dim(stf_Polys_2t)
dim(Track_A1)
over_stf
# returnList = TRUE returns list of indices
over_stf <- over(stf_Polys_2t, Track_A1, returnList = TRUE)
over_stf
# use.data = TRUE and returnList = TRUE returns list of data.frames
over_stf <- over(stf_Polys_2t, Track_A1, returnList = TRUE, use.data = TRUE)
over_stf
# use.data = TRUE and returnList = FALSE returns data.frames with (first)
# data element
over_stf <- over(stf_Polys_2t, Track_A1, returnList = FALSE, use.data = TRUE)
over_stf
# use.data = TRUE and returnList = FALSE and fn = mean returns aggregated values
over_stf_mean <- over(stf_Polys_2t, Track_A1, returnList = FALSE, fn = mean,
use.data = TRUE)
over_stf_mean
# use.data = TRUE and returnList = FALSE and fn = weighted.mean
# and additionally specified weight.points = 'byTime' returns weighted
# aggregated values
over_stf_wmean <- over(stf_Polys_2t, Track_A1, returnList = FALSE,
fn = weighted.mean, weight.points = "byTime", use.data = TRUE)
over_stf_wmean
}

